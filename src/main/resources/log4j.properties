# Set everything to be logged to the console, our stuff to file as well
log4j.rootCategory=INFO, console
log4j.category.ch.uzh=INFO, console, logfile

# Console config
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# File config
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=/var/log/spark/uzh-sentiment.log
log4j.appender.logfile.ImmediateFlush=true
log4j.appender.logfile.Threshold=debug
log4j.appender.logfile.Append=true
log4j.appender.logfile.MaxFileSize=500MB
log4j.appender.logfile.MaxBackupIndex=10
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
log4j.logger.org.apache.spark.repl.Main=WARN

# The noisier spark logs are pretty verbose, shhh, quiet....
log4j.logger.spark.storage=WARN
log4j.logger.spark.scheduler=WARN
log4j.logger.spark.CacheTracker=WARN
log4j.logger.spark.CacheTrackerActor=WARN
log4j.logger.spark.MapOutputTrackerActor=WARN
log4j.logger.spark.MapOutputTracker=WARN

# Settings to quiet third party logs that are too verbose
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR
